external interface Serializable {}

class Block223 {
	depend java.io.Serializable;
 	isA Serializable;
 	private static final long serialVersionUID = 15645756832L;
	
	public void reinitialize() {
    User.reinitializeUniqueUsername(this.getUsers());
    Game.reinitializeUniqueName(this.getGames());
    Block.reinitializeAutouniqueID(this.getBlocks());
  }

}
class Admin {
	depend java.io.Serializable;
 	isA Serializable;
 	private static final long serialVersionUID = 24645635675L;
}

class Ball {
	depend java.io.Serializable;
 	isA Serializable;
 	private static final long serialVersionUID = 33577357567L;
}

class Block {
	depend java.io.Serializable;
 	isA Serializable;
 	private static final long serialVersionUID = 41234567654L;

	public static void reinitializeAutouniqueID(List<Block> blocks) {
		nextId = 0; 
    	for (Block block : blocks) {
      		if (block.getId() > nextId) {
       		nextId = block.getId();
      		}
   		}
    	nextId++;
	}
}

class BlockAssignment {
	depend java.io.Serializable;
 	isA Serializable;
 	private static final long serialVersionUID = 52345676549L;
}


class Game {
	depend java.io.Serializable;
 	isA Serializable;
 	private static final long serialVersionUID = 60987679845L;
	
  	public static void reinitializeUniqueName(List<Game> games) {
   		gamesByName = new HashMap<String, Game>();
    	for (Game game : games) {
      		gamesByName.put(game.getName(), game);
   		}
  	}
}

class Level {
	depend java.io.Serializable;
 	isA Serializable;
 	private static final long serialVersionUID = 71234562345L;
}

 class Paddle {
	depend java.io.Serializable;
 	isA Serializable;
 	private static final long serialVersionUID = 81234509876L;
}
 class Player {
	depend java.io.Serializable;
 	isA Serializable;
 	private static final long serialVersionUID = 98907652346L;
}

class User {
	depend java.io.Serializable;
 	isA Serializable;
 	private static final long serialVersionUID = 10312456789L;
 	
 	public static void reinitializeUniqueUsername(List<User> users) {
    usersByUsername = new HashMap<String, User>();
    for (User user : users) {
      usersByUsername.put(user.getUsername(), user);
    }
  }
}


class UserRole {
	depend java.io.Serializable;
 	isA Serializable;
 	private static final long serialVersionUID = 11789647891L;
}