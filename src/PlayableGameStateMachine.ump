namespace ca.mcgill.ecse223.block.model;

class PlayableGame {
	
	statemachine{
      
		Idle{
		
			entry/ {setupGame();}
			setupComplete()-> Suspended;
		
        }
		
		Suspended{
			
			spacebarPushed()->Playing;
		
		}
		
		Playing{
			
			spacebarPushed()->Suspended;
          
			moveBall() [!isBlockHit()&&!isWallOrPaddleHit()&&!isOutOfBounds()] /{
			doMoveBall();
			}
			->Playing; 
            
			moveBall() [isBlockHit()&&!isLastBlockHit()] /{
			doBlockHit();
			}
			->Playing;
			
			moveBall() [isOutOfBounds()&&!isOnLastLife] /{
			doWallOrPaddleHit();
			}
			->Suspended;
          
			moveBall() [isWallOrPaddleHit()] ->Suspended;
          
			moveBall() [isLastBlockHit()&&!isLastLevel()] /{
			doBlockHit();
			}
			->Suspended;
          
			moveBall() [isLastBlockHit()&&isLastLevel()] /{
			doBlockHit();
			}
			->Finished;
			
			moveBall() [isOutOfBounds()&&isOnLastLife()] {
			doOutofBounds();
			}
			-> Finished;
			
			ArrowKeyPushed()[isLeftKeyPushed()]/{
			doMovePaddle();
			}
			->Playing;
					
		Finished{
		
			entry/ {addToHallOfFame();}
		
		
		}
	}
	private boolean isBlockHit{
	
	}
	
	private boolean isWallOrPaddleHit{
	
	}
	
	private boolean isOutOfBounds{
	
	}
	
	private boolean isOnLastLife{
	
	}
	
	private boolean isLastBlockHit{
	
	}
	
	private boolean isLeftKeyPushed{
	
	}
}